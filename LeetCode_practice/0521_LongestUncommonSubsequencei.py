# _*_coding:utf-8_*_
'''
521：最长特殊序列 1
题目：
给你两个字符串，请你从这两个字符串中找出最长的特殊序列
最长特殊序列：该序列为某字符串独有的最长子序列（即不能是其他字符串的子序列）
子序列：可以通过删去字符串中的某些字符实现，但不能改变剩余字符的相对顺序
空序列为所有字符串的子序列，任何字符串为其自身的子序列
输入为两个字符串，输出为最长特殊序列的长度，如果不存在，则返回 -1
示例 1：
输入: "aba", "cdc"
输出: 3
解释: 最长特殊序列可为 "aba" (或 "cdc")，两者均为自身的子序列且不是对方的子序列。

示例 2：
输入：a = "aaa", b = "bbb"
输出：3

示例 3：
输入：a = "aaa", b = "aaa"
输出：-1
 
提示：
两个字符串长度均处于区间 [1 - 100] 。
字符串中的字符仅含有 'a'~'z' 。
通过次数14,864提交次数21,620
'''

class Solution:
    def findLUSlength(self, a: str, b: str) -> int:
        pass

def findLUSlength(a, b):
    '''
    恍然大悟：网友正解：如果a,b相等返回-1，否则返回a,b最长的长度
    就是说找字符串A的子串，该子串不是B的子串，输出的是子串的最大长度，
    :param a:
    :param b:
    :return:
    '''
    return -1 if a==b else max(len(a), len(b))



res = findLUSlength('aaa', 'aab')
print(res)
